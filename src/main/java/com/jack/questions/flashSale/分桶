（二）分桶编排
1.分桶编排流程仅由运营侧操作，执行前必须鉴权；
2.在进行分桶编排之前，需要先暂停分桶服务，也就是将分桶服务设置为维护状态，此刻用户将无法下单；
3.暂停分桶服务时，必须使用独立事务手动提交，确保在继续执行分桶前，分桶状态已经提交到数据库；
4.分桶时的两个关键考量：
    1.全量与增量：全量分桶意味着将当前传入的库存总量作为最终总量，重新计算分桶数据；
        而增量则是将传入的库存总量累加到已有的库存中，然后再重新计算分桶数据；
    2.有无历史分桶数据：如果此前已有分桶数据，那么在分桶时则要先进行库存回收，随后再统一分配；
        如果此前无分桶数据，则直接创建新的分桶集。
5.分桶保存到数据库之后，应同步数据库到缓存，每个分桶都有一份独立的缓存；
6.分桶中出现任何异常应抛出以触发事务回滚；
7.无论分桶成功或失败，最后都要重新打开分桶服务，即取消分桶维护状态，否则秒杀品将无法售卖。

编排库存分桶
	获取分布式锁
	从数据库获取秒杀品
	校验秒杀品是否存在
	分桶
		获取分布式锁(key为秒杀品id)
			手动开启事务
				暂停分桶服务(将分桶服务设置为维护状态，此刻用户将无法下单)
					暂停之后发布领域时间
			手动提交事务(确保在继续执行分桶前，分桶状态已经提交到数据库)
			获取秒杀品的当前分桶数据
			若当前分桶为0，则需初始化分桶
				主桶serialNo设为0
				构建分桶时参数(计算所需桶数量，及每个桶存的库存)
				提交分桶编排
					校验每个桶的参数、数据
					删除原来这个秒杀品的分桶数据
					批量插入新的分桶数据
				发布编排库存分桶已完成事件(发布领域事件，一般基于独立的消息中间件系统发布)
			若编排方式为全量(全量分桶意味着将当前传入的库存总量作为最终总量，重新计算分桶数据)
				根据总量库存重新分桶
					回收分桶库存到主桶(把其他副桶的总和加到主桶)
						构建分桶时参数(计算所需桶数量，及每个桶存的库存)
						提交分桶编排
			若编排方式为全量(增量则是将传入的库存总量累加到已有的库存中，然后再重新计算分桶数据)
				根据增量库存重新分桶
					回收分桶库存
		释放分布式锁
		启用库存分桶
			更新分桶status
			发布启用库存分桶事件


编排库存分桶2


先根据itemId路由到某个库某张表，然后库存数据表中存了10份，对应10个桶？
    10个桶对应数据库中10个记录行，总库存会平摊到这个10个桶和记录行中