https://mp.weixin.qq.com/s/_3uYQDkZ3kfX3svYSmvxBA

3. start()方法和run()方法的区别
    start方法可以启动一个新线程，run方法只是类的一个普通方法而已，如果直接调用run方法，程序中依然只有主线程这一个线程。
    start方法实现了多线程，而run方法没有实现多线程。
    start不能被重复调用，而run方法可以。
    start方法中的run代码可以不执行完，就继续执行下面的代码，也就是说进行了线程切换。然而，如果直接调用run方法，就必须等待其代码全部执行完才能继续执行下面的代码

    一、区别
    1、线程中的start()方法和run()方法的主要区别在于，当程序调用start()方法，将会创建一个新线程去执行run()方法中的代码。
    但是如果直接调用run()方法的话，会直接在当前线程中执行run()中的代码，注意，这里不会创建新线程。这样run()就像一个普通方法一样。
    2、另外当一个线程启动之后，不能重复调用start()，否则会报IllegalStateException异常。但是可以重复调用run()方法。
    总结起来就是run()就是一个普通的方法，而start()会创建一个新线程去执行run()的代码。


    run()和start()区别：
        1、在一个线程中执行run()方法，不会生成新的线程，而是将run()当成一个方法直接执行
        2、start()会生成一个新的线程去执行run()方法。
        3、run()是普通方法，所以可以重复执行
        4、start()不能重复执行
    execute()和submit()的区别：
        1、二者都是线程池的执行方法
        2、execute()只能执行Runnable类型方法，无返回值
        3、submit可以执行Runnable类型和Callable类型方法，可以得到返回值
    execute()只能执行实现Runnable接口类型的任务;而submit()不仅可以执实现Runnable类型接口的任务，也可以执行实现Callable接口类型的任务
        execute()没有返回值，而submit()有在添加Callable类型任务的时候有返回值，我们一般通过返回值查看线程执行情况。
        如果线程执行发生异常，submit可以通过Future.get()方法抛出异常，方便我们自定义异常处理；而execute()会终止异常，没有返回值
        总结：两者主要区别，其实还是在于有无返回值，实际生产中为了更好的处理异常，使用submit更多一点。