https://blog.csdn.net/qq991658923/article/details/121293506?spm=1001.2101.3001.6650.1&utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7ERate-1-121293506-blog-121618676.pc_relevant_multi_platform_featuressortv2dupreplace&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7ERate-1-121293506-blog-121618676.pc_relevant_multi_platform_featuressortv2dupreplace&utm_relevant_index=2
同源策略
同源策略会阻止一个域的javascript脚本和另外一个域的内容进行交互。
所谓同源（即指在同一个域）就是两个页面具有相同的协议（protocol），主机（host）和端口号port。

二、什么是跨域
1.当一个请求url的协议、域名、端口三者之间任意一个与当前页面url不同即为跨域。


跨域解决方案
1.jsonp
2.cors 跨域资源共享(cross origin resource share)
3.nginx反向代理

jsonp的原理就是利用<script>标签没有跨域限制，通过<script>标签src属性，发送带有callback参数的GET请求，
服务端将接口返回数据拼凑到callback函数中，返回给浏览器，浏览器解析执行，从而前端拿到callback函数返回的数据
jsonp 缺点是只能发送 get 请求

跨域资源共享（CORS）
    普通跨域请求：只服务端设置Access-Control-Allow-Origin即可，前端无须设置，若要带cookie请求：前后端都需要设置

nginx
    我们只需要配置nginx，在一个服务器上配置多个前缀来转发http/https请求到多个真实的服务器即可。
    这样，这个服务器上所有url都是相同的域 名、协议和端口。
    因此，对于浏览器来说，这些url都是同源的，没有跨域限制。
    而实际上，这些url实际上由物理服务器提供服务。
    这些服务器内的 javascript可以跨域调用所有这些服务器上的url。