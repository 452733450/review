https://juejin.cn/post/6844903985158045703
Java BIO ： 同步并阻塞，服务器实现模式为一个连接一个线程，即客户端有连接请求时服务器端就需要启动一个线程进行处理，如果这个连接不做任何事情会造成不必要的线程开销，当然可以通过线程池机制改善。
Java NIO ： 同步非阻塞，服务器实现模式为一个请求一个线程，即客户端发送的连接请求都会注册到多路复用器上，多路复用器轮询到连接有I/O请求时才启动一个线程进行处理。
Java AIO(NIO.2) ： 异步非阻塞，服务器实现模式为一个有效请求一个线程，客户端的I/O请求都是由OS先完成了再通知服务器应用去启动线程进行处理，

同步指的是必须等待IO缓冲区内的数据就绪，
而非阻塞指的是，用户线程不原地等待IO缓冲区，可以先做一些其他操作，
    但是要定时轮询检查IO缓冲区数据是否就绪。

熟练使用Java语言，理解Java语言特性，熟悉代并发编程、网络通信 、常用数据结构、设计模式等 ;
熟练掌握 Spring、SpringBoot、MyBatis、MyBatis-Plus 等主流开发框架设计原理，阅读过部分核心代码;
深入理解 Mysql，了解索引、事务、锁机制、MVCC机制等核心原理，具有 SQL 调优、分库分表等丰富的实战经验;
深入理解 Redis 线程模型，熟练掌握核心数据结构和使用场景,深入了其解执行流程、持久化和过期策略，熟练解决缓存穿透、缓存及穿、缓存雪崩等问题;
熟悉 JVM内存模型、垃圾回收算法，各类垃圾收集器的特性，可熟练对JVM进行调优；
熟悉 Kafka、RocketMQ 等常见消息中间件的使用，对于消息可靠性、消息顺序性等原理有所了解，对于消息堆积、消息丢失等问题有解决经验;
深入理解注册中心 Nacos、Zookeeper，研究过设计原理和底层架构及其算法;
熟练掌握微服务框架SpringCloud、Dubbo,有多年使用经验，研究过部分源码；
熟悉分布式相关原理，对于分布式事务、分布式锁等有落地经验;
熟悉常用设计模式，并在项目中熟练使用过单例、工厂、代理、策略及模板方法等设计模式。


concurrent hashmap
cas 原理 ABA
jmm gc g1 cms
隔离级别， 脏读、不可重复读、幻读具体什么意思。