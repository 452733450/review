https://blog.csdn.net/qq_21729419/article/details/113643359#commentBox


共享锁（Shared Lock）：
    也称为读锁。
    允许多个事务同时获取同一个资源的共享锁，用于并发读取操作。
    多个事务可以同时持有共享锁，但互斥于独占锁。

独占锁（Exclusive Lock）：
    也称为写锁。
    一次只允许一个事务获取资源的独占锁，用于保护写入操作。
    独占锁和其他任何锁（共享锁或独占锁）互斥，即在一个事务持有独占锁期间，其他事务无法获取共享锁或独占锁。

记录锁（Record Lock）：
    也称为行锁。
    在某个表的记录级别上进行锁定，用于保护对记录的读取或修改。
    当一个事务锁定了某个记录时，其他事务无法对该记录进行修改或锁定。

间隙锁（Gap Lock）：
    在索引的两个索引键之间的间隙上设置的锁。
    用于防止其他事务在间隙中插入新记录，保护范围查询的一致性。
    防止幻读（Phantom Read）的产生。

下一个键锁（Next-Key Lock）：
    是记录锁和间隙锁的组合。
    用于在索引上保护范围查询，同时避免幻读。
    InnoDB引擎默认使用Next-Key Lock，保证了索引键值的唯一性，同时避免了幻读的产生。
表锁（Table Lock）：
    锁定整个表，阻塞其他事务对表的读写操作。
    操作较为粗粒度，对并发性能影响较大，一般情况下尽量避免使用。