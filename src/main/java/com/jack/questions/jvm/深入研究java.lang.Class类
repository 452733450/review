Java程序在运行时，Java运行时系统一直对所有的对象进行所谓的运行时类型标识。
    这项信息纪录了每个对象所属的类。
    虚拟机通常使用运行时类型信息选准正确方法去执行，用来保存这些类型信息的类是Class类。
    Class类封装一个对象和接口运行时的状态，当装载类时，Class类型的对象自动创建。
Class 没有公共构造方法。
    Class 对象是在加载类时由 Java 虚拟机以及通过调用类加载器中的 defineClass 方法自动构造的，因此不能显式地声明一个Class对象。
    虚拟机为每种类型管理一个独一无二的Class对象。
    也就是说，每个类（型）都有一个Class对象。
    运行程序时，Java虚拟机(JVM)首先检查是否所要加载的类对应的Class对象是否已经加载。
    如果没有加载，JVM就会根据类名查找.class文件，并将其Class对象载入。
基本的 Java 类型（boolean、byte、char、short、int、long、float 和 double）和关键字 void 也都对应一个 Class 对象。
每个数组属于被映射为 Class 对象的一个类，所有具有相同元素类型和维数的数组都共享该 Class 对象。
一般某个类的Class对象被载入内存，它就用来创建这个类的所有对象。