1.加载
    由类加载器负责根据一个类的全限定名来读取此类的二进制字节流到JVM内部，并存储在运行时内存区的方法区，
    然后将其转换为一个与目标类型对应的java.lang.class对象实例，作为方法区这个类的各种数据的访问入口
2.链接
    1.验证
          格式验证：验证是否符合class文件规范
          语义验证：检查一个被标记为final的类型是否包含子类，检查一个类中的final方法是否被子类进行重写；
          操作验证：类成员信息的访问修饰符是否允许访问
    2.准备
        为类中的所有静态变量分配内存空间，并为其设置一个初始值（由于还没有产生对象，实例变量不在此操作范围内）
        被final修饰的static变量（常量），会直接赋值；
    3.解析
        将常量池中的符号引用转为直接引用（得到类或者字段、方法在内存中的指针或者偏移量，以便直接调用该方法）
3.初始化
    初始化阶段就是执行类构造器方法<clinit>()的过程
    此方法不需要定义，是javac编译器自动收集类中的所有类变量的赋值动作和静态代码块中的语句合并而来
    构造器方法中指令按照语句在源文件中出现的顺序执行
    若该类具有父类，JVM会保证子类的<clinit>()执行前，父类的<clinit>()已经执行完毕