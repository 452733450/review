服务治理
    1. 调用链路自动生成
        基于 dubbo 做的分布式系统中，对各个服务之间的调用自动记录下来，然后自动将各个服务之间的依赖关系和调用链路生成出来，
        做成一张图，显示出来，大家才可以看到对吧。
    2. 服务访问压力以及时长统计
        需要自动统计各个接口和服务之间的调用次数以及访问延时，而且要分成两个级别。
            一个级别是接口粒度，就是每个服务的每个接口每天被调用多少次，TP50/TP90/TP99，三个档次的请求延时分别是多少；
            第二个级别是从源头入口开始，一个完整的请求链路经过几十个服务之后，完成一次请求，每天全链路走多少次，全链路请求延时的 TP50/TP90/TP99，分别是多少。
            这些东西都搞定了之后，后面才可以来看当前系统的压力主要在哪里，如何来扩容和优化啊。
    3. 其它
        服务分层（避免循环依赖）
        调用链路失败监控和报警
        服务鉴权
        每个服务的可用性的监控（接口调用成功率？几个 9？99.99%，99.9%，99%）
服务降级
    比如说服务 A 调用服务 B，结果服务 B 挂掉了，服务 A 重试几次调用服务 B，还是不行，那么直接降级，走一个备用的逻辑，给用户返回响应。
失败重试和超时重试
    所谓失败重试，就是 consumer 调用 provider 要是失败了，比如抛异常了，此时应该是可以重试的，或者调用超时了也可以重试