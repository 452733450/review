https://www.cnblogs.com/hunternet/p/9957913.html（比较详细的）

动态字符串
    1.没有数据结构支撑的几个问题
    2.及其容易造成缓冲区溢出问题，比如用strcat()，在用这个函数之前必须要先给目标变量分配足够的空间，否则就会溢出。
    3.如果要获取字符串的长度，没有数据结构的支撑，可能就需要遍历，它的复杂度是O(N)
    内存重分配。C字符串的每次变更(曾长或缩短)都会对数组作内存重分配。同样，如果是缩短，没有处理好多余的空间，也会造成内存泄漏。
https://www.cnblogs.com/javazhiyin/p/11063944.html
struct sdshdr{
     //记录buf数组中已使用字节的数量
     //等于 SDS 保存字符串的长度
     int len;
     //记录 buf 数组中未使用字节的数量
     int free;
     //字节数组，用于保存字符串
     char buf[];
}
再来说说它的优点：
    1.开发者不用担心字符串变更造成的内存溢出问题。
    2.常数时间复杂度获取字符串长度len字段。
    3.空间预分配free字段，会默认留够一定的空间防止多次重分配内存。

    杜绝缓冲区溢出
    减少字符串操作中的内存重分配次数
    二进制安全
    由于SDS遵循以空字符结尾的惯例，因此兼容部分C字符串函数

跳跃表
如果我们想要提高其查找效率，可以考虑在链表上建索引的方式。每两个结点提取一个结点到上一级，我们把抽出来的那一级叫作索引。

快速列表
https://www.cnblogs.com/hunternet/p/12624691.html