这一块是有大盘展示是吧？是实时查的还是页面刷的时候去统计
具体的优化点可以详细说一下吗？
数据量是多少？1000多万数据有做分表吗？如果做分库分表的话，怎么设计，怎么考虑
    净值数据1000多万
以时间来做分表字段有什么优劣
以修改时间来判断新老数据的话，有可能都是毫秒级的，在update层面体现不出来，遇到相同时间的，这怎么办？
有可能是数据状态的一个翻转，但是在同一个业务逻辑理面，比较快，比较迅速
如果说后面的业务发展，双11，双12数据量比较大，但是有几个月比较少，这样按月份，有的月份数据多，有的比较少，这怎么办？
业务发展不一样，突发性的，有可能比较多，有可能还好，这种数据量怎么评估？一个表预设多少数据量，未来的发展？
    每张表到了多少数据之后，再写到别的库里
写到别的库里，那如果是正在跑的业务，怎么迭代上线？可能临时要新建表，有没有其他更好的方案？
具体的分库分表，工作中有没有操作过？有没有做过扩容？比如现在是两库4表，现在要扩成4库8表，或者更多的
分布式数据的主键id，我想保证相关数据的顺序性，有哪几种方案，虽然是分布式的，分了多张表，但是还是想基于业务的时间增量
    雪花算法 美团leaf
现在要对数据库的数据做查询，千万的数据量，要根据用户的手机号码，姓名来查，一开始表里也没有做索引，会对表做什么样的优化？
    建索引
如果后面又加了地址信息？工作类型来做查询，又加了三四个字段，运营提需求？运营列表十几二十个字段，应该怎么处理？
用redis的原因是什么？ES呢？
如果数据量越来越大？ES的分片怎么设计会更好一点，怎么考虑？
ES底层逻辑怎么写的？
负责的系统收到一个告警，突发的服务不可用，cpu拉爆，怎么查？
    top jstack visualVM
相关的命令记得吗？
如果说cpu飙高是由于full gc导致的？这块怎么来查看，到底是因为分配的原因还是什么
通过命令行怎么判断，对象太大，还是对象太多
把老年代的占比调大一点？怎么来评判长时间存活的对象多是正确的
服务器是什么样的？垃圾回收器是？为什么用paralell old
CMS会有什么问题？CMS怎么调优？简历上JVM调优主要调的哪一块？
工作过程中有没有使用过ThreadLocal，在哪里用过？key是什么，value是什么，与Thread的关系？键和value都做虚引用有什么问题？
    脏数据与内存泄漏
        由于ThreadLocalMap的key是弱引用，而Value是强引用。
        这就导致了一个问题，ThreadLocal在没有外部对象强引用时，发生GC时弱引用Key会被回收，而Value不会回收，
        如果创建ThreadLocal的线程一直持续运行，那么复用线程(线程池)就会产生脏数据。这个Entry对象中的value有可能一直得不到回收，就会发生内存泄露。
        解决这两个问题的方法是，每次用完ThreadLocal，要及时调用remove()来清理。
zookeeper有使用吧?watch机制是什么样的？
redis的线程模型，数据结构
redis线程模型具体的原理？比如socket连接之后是什么样的情况，之后是怎么处理的，epoll模型是怎么样的，有哪些阻塞
redis锁用过吧？
redis里面的跳表是什么，有一些数据要范围的查找，使用它会怎么样
kafka,消息堆积了，堆积了几千万的数据？
加机器有没有作用，这个怎么评估，加了之后不一定有用，这一块理解吗？
partition只有5，加到30台机器，有没有用，这一块有没有了解？
手上还有空余的机器，但是partition就只有5，然后堆积了几千万数据？
改大一点就直接改？会做什么动作？比如里面已经放了一些数据？
这一块是改业务代码，重新分发，还是怎样？
本来业务代码写完了是消费的，后来发现消费不过来了，已经扩到partition的最大限制了，再扩也没意义了
