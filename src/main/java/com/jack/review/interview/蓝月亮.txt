redis为啥比较快，
基于内存
单线程
kafka和rabbitmq区别，
kafka为啥吞吐量高，
事务的隔离级别和mysql默认级别还有，
可重复读会遇到的情况,
redis和数据库同步,
ioc和di，ioc好处
    由此我们可以看到，仅仅是为了修改轮胎的构造函数，这种设计却需要修改整个上层所有类的构造函数！
    在软件工程中，这样的设计几乎是不可维护的——在实际工程项目中，有的类可能会是几千个类的底层，如果每次修改这个类，
    我们都要修改所有以它作为依赖的类，那软件的维护成本就太高了。所以我们需要进行控制反转（IoC），及上层控制下层，
    而不是下层控制着上层。我们用依赖注入（Dependency Injection）这种方式来实现控制反转。所谓依赖注入，
    就是把底层类作为参数传入上层类，实现上层类对下层类的“控制”。这里我们用构造方法传递的依赖注入方式重新写车类的定义：
