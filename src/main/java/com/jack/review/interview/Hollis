jvm是如何保证内存分配过程中的线程安全的
    给线程不安全的方法加锁
    线程隔离
        简单来说，就是每个线程在创建的时候，会分配到一块属于自己的内存
        内存大小由jvm当时运行情况计算决定
        这块内存的特殊性就在于，jvm分配内存的时候会优先分配到自己的TLAB中，除此之外的操作都和堆中其他内存块没有区别
怎么保证线程安全
什么是锁，死锁，
    互斥:资源的锁是排他性的，加锁期间只能有一个线程拥有该资源。其他线程只能等待锁释放才能尝试获取该资源。
    请求和保持:当前线程已经拥有至少一个资源，但其同时又发出新的资源请求，而被请求的资源被其他线程拥有。此时进入保持当前资源并等待下个资源的状态。
    不剥夺：线程已拥有的资源，只能由自己释放，不能被其他线程剥夺。
    循环等待：是指有多个线程互相的请求对方的资源，但同时拥有对方下一步所需的资源。形成一种循环，类似2)请求和保持。但此处指多个线程的关系。并不是指单个线程一直在循环中等待。
synchronized原理是什么，怎么用的，锁优化，锁粗化，锁消除，自旋，偏向，轻量级，重量级
synchronized和volatile区别是什么
为什么要用volatile
java内存模型
    Java线程之间的通信由Java内存模型（本文简称为JMM）控制，JMM决定一个线程对共享变量的写入何时对另一个线程可见。
    从抽象的角度来看，JMM定义了线程和主内存之间的抽象关系：
        线程之间的共享变量存储在主内存（Main Memory）中，每个线程都有一个私有的本地内存（Local Memory），
        本地内存中存储了该线程以读/写共享变量的副本
java并发包有没有什么了解
并发包里failfast，failsafe是怎么回事
什么是copyOnWrite
    Vector是通过对所有操作都加锁的方式实现线程安全的
    从 JDK1.5 开始，Java 并发包提供了两个实现了Copy-On-Write的容器，分别是CopyOnWriteArrayList和CopyOnWriteArraySet
    CopyOnWriteArrayList对add(E e)方法加了同步锁，通过Arrays.copyOf()方法，复制出一个长度为原数组的副本，然后将元素添加到新数组里，最后调用settArray方法，将原数组的引用指向新数组
    读取数据的时候并没有枷锁，如果读的时候正好有其他线程在修改CopyOnWriteArrayList的话，读到的还是旧的数据
    优点：
        读取性能很高，因为读取的时候是无锁的，比较适合读多写少的场景
        采用读写分离策略，允许读取的时候修改集合数据，没有 fail-fast 机制
    缺点：
        内存占用问题，因为CopyOnWrite的写时复制机制，当进行写操作，同时又有线程在读取数据的时候，内存里就会同时驻扎两个对象的内存，如果这些对象占用的内存比较大，比如说200M左右，那么再写入100M数据进去，内存就会占用300M，那么这个时候很有可能造成频繁的Yong GC和Full GC
        数据一致性问题，CopyOnWrite只保证数据的最终一致性，并不能保证数据的实时一致性。所以对数据实时一致性要求比较高的场景不适合使用CopyOnWrite容器
    读读这种情况是不需要加锁的，多个线程可以同时读取数据。
    读写这种情况便要考虑到对数据一致性的要求高低，我们可以将读锁和写锁分离，读取数据时不加锁，修改数据时加写锁，这样相当于只同步了执行写操作的线程，但是由于写线程在修改数据时，读线程仍然可以读取数据，所以这样会造成一定程度的数据不一致。如果对数据一致性要求比较高，可以在修改数据时同时加写锁和读锁，这样写线程在修改数据时，读线程也必须等待。
    写读这种情况，同样可以使用读写锁分离的方式，但是更好的方法就是使用CopyOnWrite，对读线程不加锁，写线程修改数据时，先把原数据复制一份进行修改，读线程仍然读到的是旧数据，修改完之后再将原数据的引用指向新的数据，注意这时候写线程仍然是需要加锁的，否则多个线程将会复制出多个副本。
    写写这种情况就只好进行同步了，但是仍然可以通过降低锁的粒度来进行优化。
    CopyOnWrite机制适用于读多写少的场景，比如搜索引擎对某些关键词的过滤使用的黑名单，黑名单很久才会更新一次，但是几乎每时每刻都在被读取
什么是aqs，cas
什么是乐观锁，悲观锁，怎么实现的，区别是什么
数据库的锁
什么是行级锁，表级锁，共享锁，排他锁，gap锁，next key lock
数据库的隔离级别
什么是聚簇索引，非聚簇索引
最左前缀
    在MySQL建立联合索引时会遵守最左前缀匹配原则，即最左优先，在检索数据时从联合索引的最左边开始匹配
索引怎么实现的
hash，b+树
为什么要用b+树
回表

分布式锁是怎么实现的
数据库，redis，zookeeper
这三种实现分布式锁的区别是什么，各自有什么优缺点

分布式缓存
redis和memcach之间有什么区别

zk是怎么实现分布式锁的
什么是zk
什么是CAP理论
为什么CAP不能同时存在
BASE理论
为什么会有BASE理论

分布式系统是怎么保证数据一致性

分布式事务
分布式一致性算法

什么是paxos算法

反射是怎么破坏单例的
    setAccessible(true)
    https://blog.csdn.net/qq_37960603/article/details/104076323

对象的属性拷贝要怎么做？beanUtils是深拷贝还是浅拷贝？
    https://blog.csdn.net/enthan809882/article/details/104956537/
simpleDateFormat是不是线程安全的？多线程情况下会出现什么问题？
    SimpleDateFormat 不是线程安全的，多线程下需要为每个线程创建不同的实例。
    不安全的原因是因为使用了 Calendar 这个全局变量
    calendar.setTime(date)会有线程安全问题

20220515
创建对象的几种方式
    new
    反射
    克隆
    反序列化
new 一个对象的过程
    https://blog.csdn.net/qq_58309291/article/details/123901649
        1.在堆区分配对象需要的内存
            分配内存包括子类和父类的实例变量
        2.对所有实例变量赋默认值
            方法区内对实例变量定义拷贝一份到堆区，赋默认值
        3.执行实例初始化代码
            执行顺序：先初始化父类再初始化子类
            先执行代码在执行构造方法
        4.如果有类似与
            child c=new child（）
            形式的c引用的话，在栈区定义child 类型引用变量c，然后将堆区对象的地址赋值给它。

    二、创建对象
        1、在堆区分配对象需要的内存
            分配的内存包括本类和父类的所有实例变量，但不包括任何静态变量。
        2.对所有实例变量赋默认值
            将方法区内对实例变量的定义拷贝一份到堆区，然后赋默认值
        3.执行实例初始化代码
            初始化顺序是先初始化父类在初始化子类，初始化时先执行实例代码然后是构造方法
        4.如果有类似于Child c = new Child()形式的c引用的话，在栈区定义Child类型引用变量c，然后将堆区对象的地址赋值给它需要注意的是，每个子类对象持有父类对象的引用，可在内部通过super关键字来调用父类对象，但在外部不可访问。

synchronized怎么保证原子性
    synchronized 底层实际上通过JVM来实现的，同一时间只能有一个线程去执行synchronized 中的代码块。
    原子性：既然同一时间只有一个线程去运行里面的代码，那么这个操作就是不能被其它线程打断的，所以这里天然就具有原子性了。
    保证有序性
        synchronized 遵循as-if-serial语义，不禁止指令重排，不管怎么重排序（编译器和处理器为了提高并行度），（单线程）程序的执行结果不能被改变
    可见性
        sychronized底层是通过monitorenter的指令来进行加锁的、通过monitorexit指令来释放锁的
        monitorenter指令其实还具有Load屏障的作用。
        也就是通过monitorenter指令之后，synchronized内部的共享变量，每次读取数据的时候被强制从主内存读取最新的数据。
        同样的道理monitorexit指令也具有Store屏障的作用，也就是让synchronized代码块内的共享变量，如果数据有变更的，强制刷新回主内存。


http调用占用内存？异步为什么能减少线程个数？netty，多路复用？netty线程模型？reactor主从
什么场景中使用了redis缓存？缓存中存了用户id？怎么去缓存获取用户id？具体哪个场景中用到了多级缓存？商品详情页，为什么要用多级缓存？
多级缓存：分布式缓存redis+hashmap,hashMap的内存溢出问题有没有？
多级缓存的具体内容
Guava的本地缓存和hashMap实现的本地缓存有什么区别
redis的缓存击穿和穿透的区别？雪崩（随机过期时间)
缓存穿透怎么解决？击穿怎么解决？布隆过滤器
缓存预热？应该怎么做？
用了什么设计模式？模板方法模式、策略模式、单例
Spring getBean获取不同的service,怎么知道自己要获取那个service？
策略服务和key之间的关系是怎么初始化进去的
模板方法有什么不好的地方吗？单例模式被破坏的场景？序列化、反射、对象的拷贝
枚举为什么不能被序列化、反序列化破坏？
反射是怎么破坏单例的？私有的构造函数怎么还能创建对象？
对象的属性拷贝要怎么做？beanUtils是深拷贝还是浅拷贝？apache的beanUtils?
    浅拷贝：创建一个新对象，这个对象对原始对象的属性值有着一份精确的拷贝。
        如果属性是基本类型数据，拷贝的就是基本类型的值，改变原始数据属性，新对象属性不会发生改变；
        如果属性是引用类型，那么就是拷贝的这个属性的内存地址，如果属性值发生改变，就会影响到原始对象。
    深拷贝：创建一个新对象，将原始对象从内存中完整的拷贝出来，从堆内存中开辟出一个新的区域存放新对象，且修改新对象，不会影响原始对
看过哪个工具类的源码的实现？时间转换，当前时间+1天，calendar?
date转String类型怎么做?simpleDateFormat，是不是线程安全的?多线程使用会出现什么问题？


分布式锁的实现方式？Lua、redission，锁释放失败了怎么办？重复释放还是失败了怎么办？
key是怎么存的（类名+方法名+资源名），value对比
uuid怎么能保证不重复？时间，max
超时时间到了，任务还没执行完怎么解决，续期
java并发，countDownLatch的机制，怎么保证线程安全？
AQS会加锁吗？CAS
countDownLatch，semaphore和cyclicBarrier区别和联系？
Atomic操作用过吗?longAdder,longAdder能替换掉AtomicInt吗？并发度/实时性？
longAdder的结果一定是准的吗？既然不准什么场景适合用呢？比如网站访问量？点赞量？
什么是跳表？JUC、Redis有用到，跳表的实现方式？
synchronize,原子性、可见性、有序性？
synchronized锁优化？
有序性?指令重排
synchronized可以禁止指令重排吗？
as-if-serial语义
线程池参数怎么配置的？cpu的2倍？


DO/DTO/VO为什么要搞三层？值对象和实体之间的区别是什么？什么东西可以作为值对象？值对象存储有什么缺点吗？聚合根有了解吗？
享元模式？
面向对象怎么理解？
Spring的源码有看过？Spring Bean初始化过程?单例的bean和非单例的有区别吗？单例的bean会有线程安全问题吗？
Spring支持循环依赖吗？bean的注入方式有哪几种？
为什么要三级缓存，二级可以吗？
所有的注入方式都支持循环依赖吗？为什么构造器注入不支持？
想给一个bean初始化加一下操作，怎么做？除了postConstruct还有其他的吗?
init-method、@post、afterPropertiesSet的执行顺序？
Bean初始化之后给bean加一个代理怎么实现？
Spring用了哪些设计模式？工厂、单例、代理、模板
beanFactory和factoryBean区别？
并发和并行的区别？
    当有多个线程在操作时,如果系统只有一个CPU,则它根本不可能真正同时进行一个以上的线程,它只能把CPU运行时间划分成若干个时间段,再将时间段分配给各个线程执行,在一个时间段的线程代码运行时,其它线程处于挂起状态.这种方式我们称之为并发(Concurrent)。
    当系统有一个以上CPU时,则线程的操作有可能非并发.当一个CPU执行一个线程时,另一个CPU可以执行另一个线程,两个线程互不抢占CPU资源,可以同时进行,这种方式我们称之为并行(Parallel)。

垃圾回收线程和用户处理线程？stop the world？JVM是多进程的？
多线程是怎么实现的？线程的状态？阻塞和等待 什么时候进入阻塞，什么时候进入等待，运行，
有没有可能处于运行状态但是没干活？数据越大优先级越高？
多线程之间数据共享、通信


什么叫做接口的幂等？
分布式事务什么场景用了，TCC是什么意思？Try、Confirm、Cancel，如果Cancel也失败了怎么办？TCC有哪些优缺点？
其他的分布式事务方案？
消息中间件的对比和区别？都支持事务消息吗？都支持延时消息吗？顺序消息呢？
rocketMQ如何保证顺序消息？消费者如何保证先消费M1后消费M2?
Rocketmq怎么保证消息不丢？缓存的刷盘机制？
消息中间件能解决什么问题？削峰填谷、解耦、消息的推拉模型？实时性消息堆积？
推的模式还能削峰填谷吗？如何用拉实现的推？怎么知道拉多少消息合适？第一次拉多少合适呢？
消息堆积怎么解决？增加消费的客户端？代码上做一些优化？
如何让接口的RT变得更小？缓存、拆除不必要的操作。
记录流水的动作可以做异步吗？单独搞一张幂等表


工作中用到的并发先关的技术，countDownLatch，线程池，synchronized
线程安全的问题什么情况下会遇到？如果没有共享变量会有线程安全问题吗？
什么是共享变量？如果是方法入参传进来的变量会有线程安全问题吗？
方法入参传进来的一定是局部变量吗？
Java中的传递方式？为什么值传递的会导致外部的参数值也发生改变？
并发的话，会发生什么问题？并发编程的特性：可见性、有序性和原子性分别介绍一下？
可见性的问题为什么会出现？内存模型、主内存、工作内存
操作系统级别有没有可见性的问题？原子性问题怎么发生的？为什么会被打断？Cpu时间片，有序性问题是怎么回事呢？指令重排
Java中怎么避免并发编程问题？volatile保证可见性、有序性
加锁的过程中是怎么同时保证三个特性的？锁的时间片丢了怎么办，有影响吗？
synchronize会加内存屏障吗？synchronized锁的是什么?一定是对象吗？
锁的是对象的什么东西呢？对.class加锁锁的是什么？
什么情况下用了countDownLatch，怎么实现的？CAS？
CyclicBarrier和countDownLatch区别？Java中还有哪些类基于CAS实现的
Atomic是什么场景下使用?和longAdder区别？为什么不精确还要用呢？
分表？数据的查询问题为什么不考虑用搜索引擎实现？
TCP/UDP区别？HTTP都是基于TCP实现的吗？RPC和HTTP的区别？为什么RPC会比HTTP效率高HTTP短链接？
JVM类加载机制，Java中有几种类加载器？
有没有不遵循双亲委派的类加载机制？tomcat为啥要破坏双亲委派？为什么打破双亲委派就能实现隔离？如果公用的类怎么办
双亲委派的过程找，类加载器之间是继承关系吗？怎么实现的？
类的组合？组合和集成之间的优缺点和如何选择？Java中支持多继承吗？为啥不支持？一个类实现了两个接口，并且接口中定义了同一个方法
Java的是什么时候被加载的？加载后的类会被立即初始化吗？内存的开辟是怎么做的？开辟多大的内存呢？内存分配过程中会有线程安全问题吗？
JVM原理是个啥意思？内存结构？本地方法区里面都有什么？常量存在哪？字符串常量池？字符串池中的常量是什么时候进入常量池的？
运行时常量池和字符串常量池是一回事吗？


ureka原理
索引下推
    不使用索引条件下推优化时的查询过程
        获取下一行，首先读取索引信息，然后根据索引将整行数据读取出来。
        然后通过where条件判断当前数据是否符合条件，符合返回数据。
    使用索引条件下推优化时的查询过程
        获取下一行的索引信息。
        检查索引中存储的列信息是否符合索引条件，如果符合将整行数据读取出来，如果不符合跳过读取下一行。
        用剩余的判断条件，判断此行数据是否符合要求，符合要求返回数据。
索引覆盖
    只需要在一颗索引树上就能获取SQL所需的所有列数据，无需回表，速度更快，这就叫做索引覆盖
    select id, name, sex from user where name = 'jack';只有name索引,这种就要回标去查sex数据
    select id, name, sex from user where name = 'jack';如果(name,sex)索引，要索引就覆盖了所有要查询的数据，不需要回标

notify() 是会随机地通知等待队列中的一个线程，而 notifyAll() 会通知等待队列中的所有线程

6.11
Java内存模型？并发编程主要解决几个问题，原子性，可见性，有序性
    是一种符合计算机内存模型规范的屏蔽了各种硬件和操作系统的访问差异的，保证了java程序在各种平台下对内存的访问都能得到一致性结果的一种机制及规范
为什么会发生原子性的问题？时间片
如何解决原子性的问题？加锁，为什么加锁可以解决原子性的问题？
为什么会发生有序性的问题？重排，sync有加内存屏障吗？
如何实现一个线程安全的类？双重校验为什么要判断两次？同步方法和同步代码块有什么区别？底层实现上有什么区别吗？对象头
同步代码块除了锁this对象，还能锁其他东西吗？Class
Sync加锁是重量级？自旋、锁优化除了自旋还有其他的吗？锁消除、粗化
粗化是怎么粗化的？
AQS、ReentrantLock和sync有什么区别呢？队列都有哪些实现呢？阻塞队列的阻塞怎么理解？ThreadLocal能帮我们解决并发问题吗？ThreadLocal会出现溢出的问题吗？
不加锁能不能实现线程安全？unsafe知道吗？final能解决线程安全吗？copy-on-write
两个线程，线程1顺序打印123，线程2顺序打印adc，顺序打印1A2B3C如何实现？notify,countDownLatch
有一个方法，开启事务加悲观锁，需要对这个方法做单元测试，该如何做？
如何排查死锁？mysql的行级锁锁的是什么东西？所有的隔离级别都有间隙锁吗？间隙锁为了解决什么问题？
MVCC怎么理解呢？快照度和当前读？RR的快照度生成几次read view
康威定律，人月神话，DDD
没有什么事情是加一个中间层是解决不了的？破窗理论

6.12
Activiti,自己实现一个简单的工作流引擎，如何实现？Bpmn中有哪些元素或者符号？
线程池的原理？拒绝策略有几种？使用的executeService吗？
forkjoinPool有了解吗？Java8的并行流？原理是什么？
submit()和execute之间有什么区别？跟返回值有关吗？
shutDown()和shutDownNow()有什么区别
kill-9 和kill-15的区别
一个立刻中止，一个执行一些后续的清理动作
hook
线程池队列有啥要求？为啥要用阻塞队列，其他的队列不行吗？
无界队列会OOM

spring中用了哪些设计模式
spring的事务传播机制？spring支持事务的嵌套吗？所有方法都支持声明式事务？为什么私有方法不能用声明式事务？
就想在私有方法中使用事务能做到吗？编程式事务可以吗？
事务不生效的问题可能是什么原因？
 异常被catch了，事务失效
线上会发生哪些非运行时异常？OOM算吗？
    oom是error
Trantional 默认非运行时异常

MySQL的日志有了解吗？binlog,redolog,undolog
binlog有几种格式？statement,row,mixed,区别？
    有的存sql语句，有的存的快照
innodb支持哪种类型的索引？聚簇索引和主键索引有什么区别？
唯一索引和普通索引在查询的过程中有啥区别？
    唯一查到就返回
什么情况下会导致索引失效？数据类型不一样,like？函数
什么都没干，用了索引查询，有没有可能不去走索引？
    区分度不高的情况？执行引擎会优化，做一个简答的评估，判断要不要走
有没有什么办法可以干预执行引擎优化
    force index
什么叫覆盖索引？
    减少回表
    只需要在一棵索引树上就能获取SQL所需的所有列数据，无需回表，速度更快，这就叫做索引覆盖
什么叫索引下推？
    提前在索引中筛选回表的条件，减少回表次数
    MySQL数据库会在取出索引的同时，判断是否可以进行WHERE条件的过滤，也就是将WHERE的部分过滤操作放在了存储引擎层
    没有索引下推的话(5.6 之前)  当进行索引查询时，首先根据索引来查找记录，然后再根据WHERE条件来过滤记录
索引下推和like有关吗？
为什么要用B+树做索引？为什么不用hash索引？

mybatis为什么都有一个 Xml 映射文件，都会写一个 Dao 接口与之对应
    Dao 接口的工作原理是 JDK 动态代理，MyBatis 运行时会使用 JDK 动态代理为 Dao 接口生成代理 proxy 对象，代理对象 proxy 会拦截接口方法，转而执行MappedStatement所代表的 sql，然后将 sql 执行结果返回


Redis
NoSql数据库和关系型数据库有啥区别？
redis支持范围查询吗？
Redis支持哪些数据类型，redis中的字符串是如何实现的?SDS了解吗？跳表了解吗？
为什么跳表会查询的快一些？
    用空间换时间，类似二分查找
Redis的线程模型？
Redis的持久化机制都有几种？
Redis的热key问题如何解决？

用double创建一个BigDecimal要怎么创建？
浮点数是可以精确的表示一个小数吗？0.1能用二进制表示吗？
如何比较两个double的值，比较两个BigDecimal如何实现的？BigDecimal中有个equals方法
Java的序列化机制 序列化的ID可以改吗，除了实现Serializable还有什么方式
Serializable中没有方法，它是怎么实现可以让一个类可以被序列化
FastJson的序列化机制
枚举，enum，是如何实现的？
synchronized和volatile之间有什么区别和联系？volatile能保证原子性？
volatile是如何保证可见性的？synchronized是怎么保证可见性的？
线程有几种状态？sleep和wait有什么区别?
notify和notifyAll有什么区别么？
代码中实现多线程，有几种方式？
Runnable和Callable,Callable的返回值是怎么拿到的？
    future.get()
    未来任务get
Future是阻塞的？
Atomic有用过吗，longAdder
原子类可以解决什么问题？原子类是如何保证的线程安全？
    原子操作
CAS，ABA问题
数据库的乐观锁是如何实现的？乐观锁和悲观锁的区别？悲观锁就被允许读了吗？


20220702
zk里面的投票机制是怎么投的？
redis可以实现消息队列吗？
频繁full GC怎么排查？jmap看堆dump，如果在堆dump上看到的对象并不明显？
    不要很快下结论，去看几个指标，fullGC频率，一天超过几次，一个小时超过几次，fullGC耗时多久，多少ms，fullGC之前是不是之前发生了很多次young GC
    可以通过拉GC日志看
GC的频率，GC的耗时和GC的效果有参考价值吗？8G直接调成16G能解决问题吗
回收8G和16G的时候有什么区别吗？GC耗时变长会有什么负面影响
频繁fullGC，但是没有什么效果，可能是什么原因？内存泄漏
    堆dump下来，去分析堆，看有哪些对象，看大对象，还是小对象，后者某个类的对象，一般fullGC不明显的情况下，就是内存泄漏
    并发量大，fullGC的时候，又很多请求进来，比如RPC一次调用就会创建很多对象
频繁fullGC，每次的效果比较明显，可能是什么原因？大对象直接进入老年代、
    有效果说明GC是生效的了
    一种可能是对象太大，直接进入老年代
    cms产生内存碎片
    年轻代和老年代分配比例的问题



怎么记录某个客户的购物车里有哪里东西
怎么实现深拷贝？
序列化？如何让一个类可以被序列化？如何自定义序列化反序列化的策略？
    transient
ArrayList用了transient，怎么实现的可以序列化字符数组的内容
序列化可以破坏单例吗？怎么破坏的？如何避免？
序列化创建对象是怎么创建的？构造方法吗？
fastJson?反序列化的漏洞，为什么会有？
    不严格Json格式所有有问题
    不是基于getset，基于字段反射，autoType机制，A类的成员变量是一个接口类型，序列化会把这个类丢掉
    出了一个noAutoWired机制？关闭的影响，接口就不能序列化了
是怎么把对象的属性转化成字符串的？是调get,set方法吗？
如果一个类，没写getset，用fastJson就不能专程字符串了吗？

    反射是重写方法，反序列化是在构造方法中加判断
spring的AOP是什么？用AOP可以实现哪些功能？切面有哪几种切面的方式？注解
可以自定义一个注解？如何自定义？想要一个注解可以作用在方法上，是用哪个元注解实现？
注解可以继承吗？可以组合吗？
常用的注解有哪些？
@Component和@Service有什么区别？
@Autowired注解用吗？可以用@Autowired把一个bean注入到一个list，map里？哪里会用到？策略模式
想在一个bean初始化之后做一些事情之后做一些特定的事情，该怎么做？实现IntializeBean
Spring用了哪些策略模式
beanFactory和FactoryBean有什么区别？
Spring用一些条件的bean
@Conditional
spring boot自动装配？
spi知道吗？跟API有什么区别？
数据库连接
有哪些地方用到了spi机制

20220703
jvm生成内部类
    编译的时候生成这个类，用$表示

java跨平台
    .class文件
    虚拟机
    语言规范，比如int规定就是4个byte
java是解释执行的语言吗？什么解释执行，什么是编译运行？
C语言是通过虚方法来实现多继承、

Service mesh是什么，可以解决什么问题呢？

2022-07-09 20:00
分布式主要用到什么技术栈？redis，分布式事务？分布式事务是如何实现的?TCC?TCC分布式事务有什么缺点？侵入，补偿代码
TCC三个阶段都在做什么？是要confirm还是cancel是如何决策的？confirm的时候有一部分成功，一部分失败，去cancel，cancel有失败，重试报警，人工处理
加入try的过程有一部分失败了，该怎么办？
    有预占的资源，是要在cancel里释放吗？
    try是针对confirm还是针对cancel
        cancel是confirm的逆向操作

二阶段，三阶段有了解吗？二阶段有什么问题？有什么不好的地方吗？
    阻塞，超时，数据不一致
二阶段的第二个阶段的兜底策略是什么？
tcc是根据状态机的流转，定时扫描中间状态来决定重试还是人工补偿
协调者挂了会怎么处理

看过jdk的源码？JUC,结合类？
juc介绍一下？aqs？
哪些工具类是基于aqs实现的？
reentranLock和sync有什么区别
公平锁和非公平锁怎么理解？如何理解？
什么情况下会用到非公平锁？有什么有点
    提高性能
    非公平锁存在线程饥饿问题
原子类是如何保证原子性的？
 CAS
cas的这个机制还在什么地方用到
sync的重量级的自旋是通过CAS实现的
sync的实现中哪个地方进行自旋？
轻量级锁会自旋吗？重量级锁会自旋吗？

copyOnWrite是什么样的原理
    读原来的，改复制的
为什么这种机制可以解决并发问题呢？
是哪种并发相关的设计模式的具体实现？不可变模式？
并发相关的队列有哪些？
阻塞队列什么情况下会阻塞呢？非阻塞队列？阻塞队列线程安全，非阻塞队列非线程安全？

jvm优化和问题排查的经验，做过哪些优化呢？
GC时间边长1000ms优化，配比从多少调到了多少？为什么从811调到622？堆内存调大了，从4g调到8g？gc时间变长了调大堆内存能解决吗
什么东西影响了GC的耗时？是一开始就用的g1吗？g1对内存的要求有没有考虑过
还有吉他的问题排查的经验吗？OOM问题的排查？排查详细过程
jmap生成dump文件，JPS, jamp

什么场景用到flink，时间窗口、
mysql8.0有时间窗口函数
spark批处理
flink的数据源是从mysql过来的吗
flink怎么拿到mysql里的数据？扫描表？flink CDC?cdc都有哪些实现方式
kafka的数据是怎么同步过来的

单点登录是怎么实现的
lambda是如何实现的？

接口和抽象类的区别？
    抽象类适用于复用的场景
    接口适用于定义规范
组合有用吗？
组合和集成哪个更好？
    组合优于集成
C++如何解决多继承问题？
    虚函数
stream?并行流有用过吗？
stream中取出最大的年龄如何取。max
comparator和comparable有区别吗？
想要对一个list随机打乱？
Collections.shuffle()

2022-07-10 20:00
redis平常开发的什么场景中使用
对mysql和缓存双写的一致性方案？
缓存更新的设计模式有了解吗？
RocketMQ的刷盘机制是不是也和这部分有关
RocketMQ的刷盘策略
netty相比于我们自己用io实现有什么好处？
java中除了NIO还有其他的IO模型吗？BIO、NIO和AIO有什么区别
netty解决tcp粘包、拆包的问题有了解吗？什么是粘包、拆包？
    连续的流，没有分界线
零拷贝是什么意思？netty是如何实现的零拷贝？
直接内存有了解吗？用直接内存能实现零拷贝吗？
注册中心的实现应该考虑哪些问题？
Cow，如何有一个实例挂了怎么办？多个实例的路由怎么做呢？常见的负载均衡算法有哪些？
    随机、轮询、权重、ip hash
远程过程调用（RPC）是基于什么技术实现的呢？怎么做到调用本地方法和远程方法都一样的呢？
限流是在什么场景中做的？限流的配置是怎么配的？
Sentinel是怎么做的限流，原理？量是怎么判断的？后面又是怎么恢复的？
时间滑动窗口是什么原理？
让你实现一个滑动窗口的功能该如何设计？

现在做的项目qps有多少？


为什么要有java虚拟机，能帮我们解决什么问题？java虚拟机是什么语言实现的？c
jdk和jre有什么区别？
java编译成class文件，javac，反编译哪个命令（工具） javap
jvm中运行时内存区域是如何划分的？堆、栈、方法区、程序计数器？
哪个区域是线程共享的？
虚拟机中JIT优化？
https://blog.csdn.net/weixin_51373750/article/details/123431798
    栈上分配，锁相关的优化
    热点代码编译
对象创建的时候内存分配的过程有了解吗？指针碰撞？
    TLAB
    划分内存的方法：
    ​ ①指针碰撞
    ​ ②空闲列表
    并发问题解决办法：
    ​ ①CAS
    ​ ②本地线程分配缓冲（Thread Local Allocation Buffer ）
类加载的过程是线程安全的吗？
想自己实现一个类加载器，要怎么做？为什么要实现findClass而不是loadClass？
    继承双亲委派实现findClass，不想委派实现LoadClass
不想委派给父类加载器，该如何做？
一个类是在什么时候被加载的？
    使用时
用一个类被不同的类加载器加载了，能不能转换
Java9有一个模块化的机制？
    tomcat和热部署
关系型数据库和非关系型数据库有什么区别？
为什么默认用RR
    binlog数据格式，一个覆盖的问题

12年大佬
监控配置的平台是如何实现的？agent？数量是如何采集的？
用了你的agent会不会启动过程变慢？
数据获取到了，能帮你做什么事情呢？
调用链分析？dapper,分布式链路追踪，skyWalking
架构做什么事情？在做技术架构的时候，会有哪些原则帮你做决策的吗？
DDD有用到吗？

mysql join怎么实现的
join on和where有什么区别吗
    where是服务层过滤的。on是在存储引擎层

100条记录的表和10000条记录的表join，拿个表做驱动表更合适

20220724
什么情况下适合用char存储？
    固定长度的字符串，身份证之类的
介绍一下什么样的场景，什么样的数据用到了缓存，介绍一下
缓存数据库怎么保证一致性

基于binlog的阿里框架
    canal
redis除了做缓存还可以做其他场景吗？
Redis的线程模型有了解吗？6.0引入多线程之后，上下文的切换和锁的竞争问题怎么办？
    select epoll poll
多路复用IO模型有了解吗？
linux都有哪些IO模型？
同步IO和异步IO有啥区别？同步一定是阻塞的吗？
    IO时间谁处理的区别
阻塞和非阻塞的区别？
同步非阻塞是怎么样的过程？
Redis的多种持久化机制，RDB和AOF的区别？各自有什么优缺点吗？
RDB比AOF快？为什么
redis支持事务吗？怎么实现的
    支持，但不保证原子性
    管道命令
布隆过滤器是什么？多个bitmap的结合展开说说
    bitmap
redis缩写
remote dictionary service

TCP和UDP的区别？拥塞控制是怎么做的？TCP队头阻塞的问题?
    队头阻塞分为请求和响应两方，还有tcp层面的队头阻塞
tcp的队头阻塞问题？能解决吗？
quic，基于UDP做了哪些事情？quic是如何做到的可靠连接的呢？
    tcp1.1解决了请求队头阻塞，tcp2解决了响应队头阻塞，tcp3基于quic解决tcp层面阻塞
为啥http3.0不基于tcp，而是改用udp实现quic协议？
    协议僵化，不可能把全世界所有的设备改了
quic之后，http3.0一定就能推广得起来吗？会有什么阻力？
    把quic当成udp是不可靠的，所以丢弃掉了
http和https有啥区别？https相比http之外有额外的连接建立吗？
多了一层ssl握手，传输数据进行对称加密
ipv4和ipv6区别？
    解决ipv4用尽的问题
    除了能代表更多ip地址以外，ipv6还有什么优势？
        路由表啊，流的支持
        位数变多，更安全？
        路由表会小一些

hashSet和TreeSet的区别
set是有序的吗？list是有序的吗？
set怎么判断插入的元素是不是重复的呢？
    先做hash运算，hash冲突用equals
如何实现一个hashCode方法？
x&15的结果是0-15结果，与x%16的结果一样
hashMap的源码看过吗？线程安全的list？vector是怎么实现线程安全的？
    synchronized
把已知的一个list转成一个线程安全的list
copyWriteArrayList
subList是如何实现的？
遍历一个list有哪几种方式
遍历的过程中要删除一个元素？fail-fast？为什么要检查modCount
    iterator
普通for循环删除元素也会发生异常吗？为什么普通的for循环不会出现modifyException
HashMap可以用在并发场景中吗？为什么？
    死循环 头插
hashMap的元素插入，是头插还是尾插
HashMap在jdk1.8的一些改动有知道吗
jdk1.8特性？
lambda表达式是怎么实现的？有什么好处？为什么要引入
新版本特性有了解吗？LTS是什么意思？
接口中的默认方法
序列化和反序列化？serilizable
序列化id有啥用
自定义序列化方式？不管别人把值设为几，我都想把它序列化为1
反序列化能破坏单例吗？
    可以
反序列化是怎么创建出来的对象？
    object inputStream
json有了解吗？把一个对象序列化成一个json字符串，怎么做？jackSon?
枚举用过吗？枚举是怎么实现的？枚举是实现单例的最好的方式？可以不被破坏？自动有防反射的方法
    不需要解决线程安全的的问题，不会被反序列化破坏掉
枚举里面可以定义方法吗？可以定义成员变量
    可以              可以
进程和线程的区别？java是多进程还是多线程的
如何杀掉一个java的进程
    kill -9
G1和CMS有什么区别？G1有什么好处？能解决碎片的问题吗？
stw是什么意思？STW之前程序正在执行怎么办？安全点知道吗？
java的跨平台怎么理解？字节码是通过JIT得到的吗？
把一个java文件编译成class文件，要怎么做？javac
java是值传递还是引用传递

并发编程会用到哪几个关键字？
volatile synchronized有什么区别？
volatile有的功能是sync没有的吗？
指令重排和内存屏障？

时间轮
zk实现分布式锁的原理？有序临时节点，网络抖动会不会导致并发问题
zk选主机制？ZAP?leader挂了之后怎么办
zk在cap中符合哪两个？zk的节点有哪几个角色？observer 一次新的数据的写入过程是怎么样的
观察者的数据是是什么时候写进去的呢

分布式事务的解决思路
2pc存在什么问题，为什么要用3pc？同步阻塞什么时候会发生
2pc会不会出现数据不一致

cap为什么不能全保证

分库分表是怎么做的

sass
商户id，分表以商户id进行取模
0-1千万一个库，1-2千万一个库

商户id分表，买家想查订单数据怎么办
所有的查询带商户id?
会不会出现某一个商户数据量特别大，出现数据倾斜的问题