在一般情况下，HTTP遵守“请求-响应”的模式，也就是客户端每次发送一个请求到服务端，服务端返回响应，
    这种模式很简单，但是有一个致命缺陷那就是页面中有多个请求，每个请求必须等到前一个请求响应之后才能发送，
    并且当前请求的响应返回之后，当前请求的下一个请求才能发送

在tcp链接中，http请求必须等待前一个请求响应之后，才能发送，后面的依次类推，
    由此可以看出，如果在一个tcp通道中如果某个http请求的响应因为某个原因没有及时返回，
    后面的响应会被阻塞，这就是队头阻塞。

因为HTTP管道化本身可能会导致队头阻塞的问题，以及上面提到的一些限制，现代浏览器默认都关闭了管道化，
并且大部分服务器也是默认不支持管道化的。

下面我给大家总结一下本篇文章的内容：
    1、首先我们厘清了一个概念，那就是http长连接其实指的是tcp长连接。
    2、队头阻塞是一种现象，http因为请求-响应模型会有队头阻塞的现象出现，队头阻塞指的是在同一个tcp链接中，如果先发送的http请求如果没有响应的话，后面的http请求也不会响应。
    3、解决队头阻塞的第一个方案就是并发长连接，浏览器默认是6-8个长连接，我们可以用域名分片的技术突破这个数值。
    4、并发长连接虽然在一定程度上解决了http的队头阻塞，但是会对服务器的性能有较高的要求。

什么叫域名分片呢，给同一个网站设置多个域名，
比如a.com和b.com都指向同一个网站，这样浏览器对同一个网站的最大并发数就会随着域名的增加而增加


http1.1是明文协议，解析http1.1的明文是基于文本。http2.0的协议采用的是二进制格式。
http2为什么要采用二进制格式呢？
1、基于文本解析的话，文本的表现形式有多样性，要做到健壮性考虑的场景必然很多。
2、二进制则只认0和1的组合，解析速度更快。
那么在不改动 HTTP/1.1 的语义、⽅法、状态码、URI 以及⾸部字段等等的情况下, HTTP/2 是如何过渡到http1.1呢?
关键之⼀就是在应⽤层(HTTP/2)和传输层(TCP or UDP)之间增加⼀个⼆进制分帧层

总结一下：上文我们简单介绍了http2的多路复用功能，简单来说有如下几个特点：
1、http2针对同一个域名只建立一个TCP链接，所有http请求都通过这个TCP链接来完成。
2、http2将每个request切割为更小的帧，有header帧和body帧，并且给同一个request的帧分配相同的streamId，模拟实现了流的传输。